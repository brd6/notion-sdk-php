{
    "name": "brd6/notion-sdk-php",
    "description": "Notion SDK for PHP",
    "license": "MIT",
    "type": "library",
    "keywords": [
        "notion",
        "notion-sdk",
        "notion-api",
        "php",
        "notion-client"
    ],
    "authors": [
        {
            "name": "brd6",
            "email": "hello@berdrigue.com",
            "homepage": "https://berdrigue.com"
        }
    ],
    "require": {
        "php": "^7.4 || ^8",
        "php-http/client-common": "^2.5",
        "php-http/discovery": "^1.14",
        "php-http/httplug": "^2.3",
        "php-http/message-factory": "^1.0",
        "psr/http-client-implementation": "^1.0",
        "psr/http-message": "^2.0"
    },
    "require-dev": {
        "captainhook/captainhook": "^5.10",
        "dealerdirect/phpcodesniffer-composer-installer": "^1.0.0",
        "ergebnis/composer-normalize": "^2.25",
        "hamcrest/hamcrest-php": "^2.0",
        "mockery/mockery": "^1.5",
        "nyholm/psr7": "^1.5",
        "php-http/message": "^1.13",
        "php-parallel-lint/php-console-highlighter": "^1.0",
        "php-parallel-lint/php-parallel-lint": "^1.3",
        "phpstan/phpstan": "^1.5",
        "phpstan/phpstan-mockery": "^1.0",
        "phpstan/phpstan-phpunit": "^1.1",
        "phpunit/phpunit": "^9.5",
        "psalm/plugin-mockery": "^1.1.0",
        "psalm/plugin-phpunit": "^0.18.0",
        "ramsey/coding-standard": "^2.0",
        "roave/security-advisories": "dev-latest",
        "symfony/http-client": "^5.4",
        "vimeo/psalm": "^5.6"
    },
    "suggest": {
        "nyholm/psr7": "PSR-7 message implementation",
        "symfony/http-client": "HTTP client"
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "autoload": {
        "psr-4": {
            "Brd6\\NotionSdkPhp\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Brd6\\Test\\NotionSdkPhp\\": "tests/"
        }
    },
    "config": {
        "allow-plugins": {
            "composer/package-versions-deprecated": true,
            "phpstan/extension-installer": true,
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "ergebnis/composer-normalize": true,
            "captainhook/plugin-composer": true,
            "php-http/discovery": true
        },
        "sort-packages": true
    },
    "extra": {
        "captainhook": {
            "force-install": true
        }
    },
    "scripts": {
        "dev:all": [
            "@dev:build:clean:all",
            "@dev:analyze:all",
            "@dev:lint:all",
            "@dev:test:unit"
        ],
        "dev:analyze:all": [
            "@dev:analyze:phpstan",
            "@dev:analyze:psalm"
        ],
        "dev:analyze:phpstan": "phpstan analyse --ansi",
        "dev:analyze:psalm": "psalm",
        "dev:build:clean:all": "git clean -fX build/",
        "dev:build:clean:cache": "git clean -fX build/cache/.",
        "dev:build:clean:coverage": "git clean -fX build/coverage/.",
        "dev:changelog": "keep-a-changelog --ansi",
        "dev:lint:all": [
            "@dev:lint:syntax",
            "@dev:lint:style"
        ],
        "dev:lint:fix": "phpcbf --cache=build/cache/phpcs.cache",
        "dev:lint:style": "phpcs --colors --cache=build/cache/phpcs.cache",
        "dev:lint:syntax": "parallel-lint --colors src tests",
        "dev:test:unit": "phpunit",
        "test": "@dev:test:unit"
    },
    "scripts-descriptions": {
        "dev:all": "Runs all dev commands",
        "dev:analyze:all": "Runs all static analysis checks.",
        "dev:analyze:phpstan": "Runs the PHPStan static analyzer.",
        "dev:analyze:psalm": "Runs the Psalm static analyzer.",
        "dev:build:clean": "Cleans the build/ directory.",
        "dev:build:clean:all": "Cleans the build/ directory.",
        "dev:build:clean:cache": "Cleans the build/cache/ directory.",
        "dev:build:clean:coverage": "Cleans the build/coverage/ directory.",
        "dev:changelog": "Support for working with Keep A Changelog.",
        "dev:lint:fix": "Auto-fixes coding standards issues, if possible.",
        "dev:lint:style": "Checks for coding standards issues.",
        "dev:lint:syntax": "Checks for syntax errors.",
        "dev:test:unit": "Runs unit tests and generates CI coverage reports.",
        "test": "Runs unit tests and generates CI coverage reports."
    }
}
